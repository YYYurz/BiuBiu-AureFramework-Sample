-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: GameConfig

local flatbuffers = require('3rd.flatbuffers')

local Entity = {} -- the module
local Entity_mt = {} -- the class metatable

function Entity.New()
    local o = {}
    setmetatable(o, {__index = Entity_mt})
    return o
end
function Entity.GetRootAsEntity(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = Entity.New()
    o:Init(buf, n + offset)
    return o
end
function Entity_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function Entity_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function Entity_mt:AssetName()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function Entity.Start(builder) builder:StartObject(2) end
function Entity.AddId(builder, Id) builder:PrependUint32Slot(0, Id, 0) end
function Entity.AddAssetName(builder, AssetName) builder:PrependUOffsetTRelativeSlot(1, AssetName, 0) end
function Entity.End(builder) return builder:EndObject() end

return Entity -- return the module
