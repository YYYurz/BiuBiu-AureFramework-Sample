-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: GameConfig

local flatbuffers = require('3rd.flatbuffers')

local GameConfig = {} -- the module
local GameConfig_mt = {} -- the class metatable

function GameConfig.New()
    local o = {}
    setmetatable(o, {__index = GameConfig_mt})
    return o
end
function GameConfig.GetRootAsGameConfig(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = GameConfig.New()
    o:Init(buf, n + offset)
    return o
end
function GameConfig_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function GameConfig_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function GameConfig_mt:GlobalConfigParam()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamB(j)
    local o = self.view:Offset(8)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Uint32, a + ((j-1) * 4))
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamBLength()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamCK(j)
    local o = self.view:Offset(10)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Uint32, a + ((j-1) * 4))
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamCKLength()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamCV(j)
    local o = self.view:Offset(12)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Uint32, a + ((j-1) * 4))
    end
    return 0
end
function GameConfig_mt:GlobalConfigParamCVLength()
    local o = self.view:Offset(12)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function GameConfig.Start(builder) builder:StartObject(5) end
function GameConfig.AddId(builder, id) builder:PrependUint32Slot(0, id, 0) end
function GameConfig.AddGlobalConfigParam(builder, GlobalConfigParam) builder:PrependUint32Slot(1, GlobalConfigParam, 0) end
function GameConfig.AddGlobalConfigParamB(builder, GlobalConfigParamB) builder:PrependUOffsetTRelativeSlot(2, GlobalConfigParamB, 0) end
function GameConfig.StartGlobalConfigParamBVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function GameConfig.AddGlobalConfigParamCK(builder, GlobalConfigParamCK) builder:PrependUOffsetTRelativeSlot(3, GlobalConfigParamCK, 0) end
function GameConfig.StartGlobalConfigParamCKVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function GameConfig.AddGlobalConfigParamCV(builder, GlobalConfigParamCV) builder:PrependUOffsetTRelativeSlot(4, GlobalConfigParamCV, 0) end
function GameConfig.StartGlobalConfigParamCVVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function GameConfig.End(builder) return builder:EndObject() end

return GameConfig -- return the module