# automatically generated by the FlatBuffers compiler, do not modify

# namespace: GameConfig

import flatbuffers

class Sound(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSound(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Sound()
        x.Init(buf, n + offset)
        return x

    # Sound
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Sound
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Sound
    def GroupName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sound
    def Loop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Sound
    def Volume(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Sound
    def AssetPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def SoundStart(builder): builder.StartObject(5)
def SoundAddId(builder, Id): builder.PrependUint32Slot(0, Id, 0)
def SoundAddGroupName(builder, GroupName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(GroupName), 0)
def SoundAddLoop(builder, Loop): builder.PrependUint32Slot(2, Loop, 0)
def SoundAddVolume(builder, Volume): builder.PrependFloat32Slot(3, Volume, 0.0)
def SoundAddAssetPath(builder, AssetPath): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(AssetPath), 0)
def SoundEnd(builder): return builder.EndObject()
